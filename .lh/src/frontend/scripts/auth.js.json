{
    "sourceFile": "src/frontend/scripts/auth.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1743971113039,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1743971471155,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,4 @@\n-// Configuración de la API\r\n-const API_URL = 'http://localhost:3000/api';\r\n-\r\n // Funciones de autenticación\r\n const auth = {\r\n     // Login\r\n     async login(email, password) {\r\n@@ -17,9 +14,9 @@\n             const data = await response.json();\r\n             \r\n             if (response.ok) {\r\n                 localStorage.setItem('token', data.token);\r\n-                localStorage.setItem('userName', data.nombre);\r\n+                localStorage.setItem('userName', data.user.nombre);\r\n                 return true;\r\n             } else {\r\n                 throw new Error(data.message || 'Error en el inicio de sesión');\r\n             }\r\n"
                },
                {
                    "date": 1743971696415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,38 @@\n             throw error;\r\n         }\r\n     },\r\n \r\n+    // Registro\r\n+    async register(nombre, telefono, email, password) {\r\n+        try {\r\n+            const response = await fetch(`${API_URL}/auth/register`, {\r\n+                method: 'POST',\r\n+                headers: {\r\n+                    'Content-Type': 'application/json'\r\n+                },\r\n+                body: JSON.stringify({ \r\n+                    nombre, \r\n+                    telefono, \r\n+                    email, \r\n+                    contrasena: password,\r\n+                    id_rol: 2 // Rol de usuario normal por defecto\r\n+                })\r\n+            });\r\n+\r\n+            const data = await response.json();\r\n+            \r\n+            if (response.ok) {\r\n+                return true;\r\n+            } else {\r\n+                throw new Error(data.message || 'Error en el registro');\r\n+            }\r\n+        } catch (error) {\r\n+            console.error('Error:', error);\r\n+            throw error;\r\n+        }\r\n+    },\r\n+\r\n     // Logout\r\n     logout() {\r\n         localStorage.removeItem('token');\r\n         localStorage.removeItem('userName');\r\n@@ -46,15 +76,21 @@\n \r\n // Event Listeners\r\n document.addEventListener('DOMContentLoaded', () => {\r\n     const loginForm = document.getElementById('loginForm');\r\n+    const registerForm = document.getElementById('registerForm');\r\n     const logoutBtn = document.getElementById('logoutBtn');\r\n     const userName = document.getElementById('userName');\r\n+    const showRegisterLink = document.getElementById('showRegisterLink');\r\n+    const showLoginLink = document.getElementById('showLoginLink');\r\n+    const loginSection = document.getElementById('loginSection');\r\n+    const registerSection = document.getElementById('registerSection');\r\n \r\n     // Mostrar nombre de usuario si está autenticado\r\n     if (auth.isAuthenticated()) {\r\n         userName.textContent = localStorage.getItem('userName');\r\n-        document.getElementById('loginSection').classList.add('hidden');\r\n+        loginSection.classList.add('hidden');\r\n+        registerSection.classList.add('hidden');\r\n         document.querySelector('nav').classList.remove('hidden');\r\n     }\r\n \r\n     // Manejar login\r\n@@ -70,8 +106,41 @@\n             alert(error.message);\r\n         }\r\n     });\r\n \r\n+    // Manejar registro\r\n+    registerForm.addEventListener('submit', async (e) => {\r\n+        e.preventDefault();\r\n+        const nombre = document.getElementById('regNombre').value;\r\n+        const telefono = document.getElementById('regTelefono').value;\r\n+        const email = document.getElementById('regEmail').value;\r\n+        const password = document.getElementById('regPassword').value;\r\n+\r\n+        try {\r\n+            await auth.register(nombre, telefono, email, password);\r\n+            alert('Registro exitoso. Ahora puedes iniciar sesión.');\r\n+            // Cambiar a la sección de login\r\n+            registerSection.classList.add('hidden');\r\n+            loginSection.classList.remove('hidden');\r\n+        } catch (error) {\r\n+            alert(error.message);\r\n+        }\r\n+    });\r\n+\r\n+    // Mostrar formulario de registro\r\n+    showRegisterLink.addEventListener('click', (e) => {\r\n+        e.preventDefault();\r\n+        loginSection.classList.add('hidden');\r\n+        registerSection.classList.remove('hidden');\r\n+    });\r\n+\r\n+    // Mostrar formulario de login\r\n+    showLoginLink.addEventListener('click', (e) => {\r\n+        e.preventDefault();\r\n+        registerSection.classList.add('hidden');\r\n+        loginSection.classList.remove('hidden');\r\n+    });\r\n+\r\n     // Manejar logout\r\n     logoutBtn.addEventListener('click', () => {\r\n         auth.logout();\r\n     });\r\n"
                },
                {
                    "date": 1743971974644,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,20 +7,20 @@\n                 method: 'POST',\r\n                 headers: {\r\n                     'Content-Type': 'application/json'\r\n                 },\r\n-                body: JSON.stringify({ email, password })\r\n+                body: JSON.stringify({ email, contrasena: password })\r\n             });\r\n \r\n             const data = await response.json();\r\n             \r\n-            if (response.ok) {\r\n-                localStorage.setItem('token', data.token);\r\n-                localStorage.setItem('userName', data.user.nombre);\r\n-                return true;\r\n-            } else {\r\n+            if (!response.ok) {\r\n                 throw new Error(data.message || 'Error en el inicio de sesión');\r\n             }\r\n+\r\n+            localStorage.setItem('token', data.token);\r\n+            localStorage.setItem('userName', data.user.nombre);\r\n+            return true;\r\n         } catch (error) {\r\n             console.error('Error:', error);\r\n             throw error;\r\n         }\r\n@@ -44,13 +44,13 @@\n             });\r\n \r\n             const data = await response.json();\r\n             \r\n-            if (response.ok) {\r\n-                return true;\r\n-            } else {\r\n+            if (!response.ok) {\r\n                 throw new Error(data.message || 'Error en el registro');\r\n             }\r\n+\r\n+            return true;\r\n         } catch (error) {\r\n             console.error('Error:', error);\r\n             throw error;\r\n         }\r\n@@ -93,55 +93,65 @@\n         document.querySelector('nav').classList.remove('hidden');\r\n     }\r\n \r\n     // Manejar login\r\n-    loginForm.addEventListener('submit', async (e) => {\r\n-        e.preventDefault();\r\n-        const email = document.getElementById('email').value;\r\n-        const password = document.getElementById('password').value;\r\n+    if (loginForm) {\r\n+        loginForm.addEventListener('submit', async (e) => {\r\n+            e.preventDefault();\r\n+            const email = document.getElementById('email').value;\r\n+            const password = document.getElementById('password').value;\r\n \r\n-        try {\r\n-            await auth.login(email, password);\r\n-            window.location.reload();\r\n-        } catch (error) {\r\n-            alert(error.message);\r\n-        }\r\n-    });\r\n+            try {\r\n+                await auth.login(email, password);\r\n+                window.location.reload();\r\n+            } catch (error) {\r\n+                alert(error.message);\r\n+            }\r\n+        });\r\n+    }\r\n \r\n     // Manejar registro\r\n-    registerForm.addEventListener('submit', async (e) => {\r\n-        e.preventDefault();\r\n-        const nombre = document.getElementById('regNombre').value;\r\n-        const telefono = document.getElementById('regTelefono').value;\r\n-        const email = document.getElementById('regEmail').value;\r\n-        const password = document.getElementById('regPassword').value;\r\n+    if (registerForm) {\r\n+        registerForm.addEventListener('submit', async (e) => {\r\n+            e.preventDefault();\r\n+            const nombre = document.getElementById('regNombre').value;\r\n+            const telefono = document.getElementById('regTelefono').value;\r\n+            const email = document.getElementById('regEmail').value;\r\n+            const password = document.getElementById('regPassword').value;\r\n \r\n-        try {\r\n-            await auth.register(nombre, telefono, email, password);\r\n-            alert('Registro exitoso. Ahora puedes iniciar sesión.');\r\n-            // Cambiar a la sección de login\r\n-            registerSection.classList.add('hidden');\r\n-            loginSection.classList.remove('hidden');\r\n-        } catch (error) {\r\n-            alert(error.message);\r\n-        }\r\n-    });\r\n+            try {\r\n+                await auth.register(nombre, telefono, email, password);\r\n+                alert('Registro exitoso. Ahora puedes iniciar sesión.');\r\n+                // Cambiar a la sección de login\r\n+                registerSection.classList.add('hidden');\r\n+                loginSection.classList.remove('hidden');\r\n+            } catch (error) {\r\n+                alert(error.message);\r\n+            }\r\n+        });\r\n+    }\r\n \r\n     // Mostrar formulario de registro\r\n-    showRegisterLink.addEventListener('click', (e) => {\r\n-        e.preventDefault();\r\n-        loginSection.classList.add('hidden');\r\n-        registerSection.classList.remove('hidden');\r\n-    });\r\n+    if (showRegisterLink) {\r\n+        showRegisterLink.addEventListener('click', (e) => {\r\n+            e.preventDefault();\r\n+            loginSection.classList.add('hidden');\r\n+            registerSection.classList.remove('hidden');\r\n+        });\r\n+    }\r\n \r\n     // Mostrar formulario de login\r\n-    showLoginLink.addEventListener('click', (e) => {\r\n-        e.preventDefault();\r\n-        registerSection.classList.add('hidden');\r\n-        loginSection.classList.remove('hidden');\r\n-    });\r\n+    if (showLoginLink) {\r\n+        showLoginLink.addEventListener('click', (e) => {\r\n+            e.preventDefault();\r\n+            registerSection.classList.add('hidden');\r\n+            loginSection.classList.remove('hidden');\r\n+        });\r\n+    }\r\n \r\n     // Manejar logout\r\n-    logoutBtn.addEventListener('click', () => {\r\n-        auth.logout();\r\n-    });\r\n+    if (logoutBtn) {\r\n+        logoutBtn.addEventListener('click', () => {\r\n+            auth.logout();\r\n+        });\r\n+    }\r\n }); \n\\ No newline at end of file\n"
                }
            ],
            "date": 1743971113039,
            "name": "Commit-0",
            "content": "// Configuración de la API\r\nconst API_URL = 'http://localhost:3000/api';\r\n\r\n// Funciones de autenticación\r\nconst auth = {\r\n    // Login\r\n    async login(email, password) {\r\n        try {\r\n            const response = await fetch(`${API_URL}/auth/login`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ email, password })\r\n            });\r\n\r\n            const data = await response.json();\r\n            \r\n            if (response.ok) {\r\n                localStorage.setItem('token', data.token);\r\n                localStorage.setItem('userName', data.nombre);\r\n                return true;\r\n            } else {\r\n                throw new Error(data.message || 'Error en el inicio de sesión');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Logout\r\n    logout() {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('userName');\r\n        window.location.reload();\r\n    },\r\n\r\n    // Verificar si el usuario está autenticado\r\n    isAuthenticated() {\r\n        return !!localStorage.getItem('token');\r\n    },\r\n\r\n    // Obtener el token\r\n    getToken() {\r\n        return localStorage.getItem('token');\r\n    }\r\n};\r\n\r\n// Event Listeners\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    const loginForm = document.getElementById('loginForm');\r\n    const logoutBtn = document.getElementById('logoutBtn');\r\n    const userName = document.getElementById('userName');\r\n\r\n    // Mostrar nombre de usuario si está autenticado\r\n    if (auth.isAuthenticated()) {\r\n        userName.textContent = localStorage.getItem('userName');\r\n        document.getElementById('loginSection').classList.add('hidden');\r\n        document.querySelector('nav').classList.remove('hidden');\r\n    }\r\n\r\n    // Manejar login\r\n    loginForm.addEventListener('submit', async (e) => {\r\n        e.preventDefault();\r\n        const email = document.getElementById('email').value;\r\n        const password = document.getElementById('password').value;\r\n\r\n        try {\r\n            await auth.login(email, password);\r\n            window.location.reload();\r\n        } catch (error) {\r\n            alert(error.message);\r\n        }\r\n    });\r\n\r\n    // Manejar logout\r\n    logoutBtn.addEventListener('click', () => {\r\n        auth.logout();\r\n    });\r\n}); "
        }
    ]
}