{
    "sourceFile": "src/frontend/scripts/productos.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1743971135536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1743973560217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,10 +182,10 @@\n             modalContent.innerHTML = `\r\n                 <h3>Nuevo Producto</h3>\r\n                 <form id=\"addProductoForm\">\r\n                     <div class=\"form-group\">\r\n-                        <label for=\"nombre\">Nombre:</label>\r\n-                        <input type=\"text\" id=\"nombre\" required>\r\n+                        <label for=\"nombre_producto\">Nombre:</label>\r\n+                        <input type=\"text\" id=\"nombre_producto\" required>\r\n                     </div>\r\n                     <div class=\"form-group\">\r\n                         <label for=\"descripcion\">Descripción:</label>\r\n                         <textarea id=\"descripcion\" required></textarea>\r\n@@ -194,8 +194,14 @@\n                         <label for=\"precio\">Precio:</label>\r\n                         <input type=\"number\" id=\"precio\" required>\r\n                     </div>\r\n                     <div class=\"form-group\">\r\n+                        <label for=\"id_categoria\">Categoría:</label>\r\n+                        <select id=\"id_categoria\" required>\r\n+                            <option value=\"\">Seleccione una categoría</option>\r\n+                        </select>\r\n+                    </div>\r\n+                    <div class=\"form-group\">\r\n                         <label for=\"imagen\">Imagen:</label>\r\n                         <input type=\"file\" id=\"imagen\" required>\r\n                     </div>\r\n                     <button type=\"submit\">Crear</button>\r\n@@ -203,14 +209,26 @@\n             `;\r\n \r\n             modal.classList.remove('hidden');\r\n             \r\n+            // Cargar categorías en el select\r\n+            categorias.getAll().then(categorias => {\r\n+                const select = document.getElementById('id_categoria');\r\n+                categorias.forEach(categoria => {\r\n+                    const option = document.createElement('option');\r\n+                    option.value = categoria.id_categoria;\r\n+                    option.textContent = categoria.nombre_categoria;\r\n+                    select.appendChild(option);\r\n+                });\r\n+            });\r\n+            \r\n             document.getElementById('addProductoForm').addEventListener('submit', async (e) => {\r\n                 e.preventDefault();\r\n                 const formData = {\r\n-                    nombre: document.getElementById('nombre').value,\r\n+                    nombre_producto: document.getElementById('nombre_producto').value,\r\n                     descripcion: document.getElementById('descripcion').value,\r\n                     precio: document.getElementById('precio').value,\r\n+                    id_categoria: document.getElementById('id_categoria').value,\r\n                     imagen: document.getElementById('imagen').files[0]\r\n                 };\r\n                 \r\n                 try {\r\n"
                },
                {
                    "date": 1743973774622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -191,9 +191,9 @@\n                         <textarea id=\"descripcion\" required></textarea>\r\n                     </div>\r\n                     <div class=\"form-group\">\r\n                         <label for=\"precio\">Precio:</label>\r\n-                        <input type=\"number\" id=\"precio\" required>\r\n+                        <input type=\"number\" id=\"precio\" step=\"0.01\" required>\r\n                     </div>\r\n                     <div class=\"form-group\">\r\n                         <label for=\"id_categoria\">Categoría:</label>\r\n                         <select id=\"id_categoria\" required>\r\n@@ -201,15 +201,16 @@\n                         </select>\r\n                     </div>\r\n                     <div class=\"form-group\">\r\n                         <label for=\"imagen\">Imagen:</label>\r\n-                        <input type=\"file\" id=\"imagen\" required>\r\n+                        <input type=\"file\" id=\"imagen\" accept=\"image/*\" required>\r\n                     </div>\r\n-                    <button type=\"submit\">Crear</button>\r\n+                    <button type=\"submit\">Crear Producto</button>\r\n                 </form>\r\n             `;\r\n \r\n             modal.classList.remove('hidden');\r\n+            modal.classList.add('show');\r\n             \r\n             // Cargar categorías en el select\r\n             categorias.getAll().then(categorias => {\r\n                 const select = document.getElementById('id_categoria');\r\n@@ -218,8 +219,11 @@\n                     option.value = categoria.id_categoria;\r\n                     option.textContent = categoria.nombre_categoria;\r\n                     select.appendChild(option);\r\n                 });\r\n+            }).catch(error => {\r\n+                console.error('Error al cargar categorías:', error);\r\n+                alert('Error al cargar las categorías');\r\n             });\r\n             \r\n             document.getElementById('addProductoForm').addEventListener('submit', async (e) => {\r\n                 e.preventDefault();\r\n@@ -232,12 +236,14 @@\n                 };\r\n                 \r\n                 try {\r\n                     await productos.create(formData);\r\n+                    modal.classList.remove('show');\r\n                     modal.classList.add('hidden');\r\n                     productos.loadProductos();\r\n                 } catch (error) {\r\n-                    alert(error.message);\r\n+                    console.error('Error al crear producto:', error);\r\n+                    alert(error.message || 'Error al crear el producto');\r\n                 }\r\n             });\r\n         });\r\n     }\r\n"
                },
                {
                    "date": 1743978262267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,10 +18,14 @@\n     // Crear producto\r\n     async create(productoData) {\r\n         try {\r\n             const formData = new FormData();\r\n-            for (let key in productoData) {\r\n-                formData.append(key, productoData[key]);\r\n+            formData.append('nombre_producto', productoData.nombre_producto);\r\n+            formData.append('descripcion', productoData.descripcion);\r\n+            formData.append('precio', productoData.precio);\r\n+            formData.append('id_categoria', productoData.id_categoria);\r\n+            if (productoData.imagen) {\r\n+                formData.append('imagen', productoData.imagen);\r\n             }\r\n \r\n             const response = await fetch(`${API_URL}/productos`, {\r\n                 method: 'POST',\r\n@@ -29,8 +33,14 @@\n                     'Authorization': `Bearer ${auth.getToken()}`\r\n                 },\r\n                 body: formData\r\n             });\r\n+\r\n+            if (!response.ok) {\r\n+                const error = await response.json();\r\n+                throw new Error(error.message || 'Error al crear el producto');\r\n+            }\r\n+\r\n             return await response.json();\r\n         } catch (error) {\r\n             console.error('Error:', error);\r\n             throw error;\r\n@@ -183,48 +193,47 @@\n                 <h3>Nuevo Producto</h3>\r\n                 <form id=\"addProductoForm\">\r\n                     <div class=\"form-group\">\r\n                         <label for=\"nombre_producto\">Nombre:</label>\r\n-                        <input type=\"text\" id=\"nombre_producto\" required>\r\n+                        <input type=\"text\" id=\"nombre_producto\" name=\"nombre_producto\" required>\r\n                     </div>\r\n                     <div class=\"form-group\">\r\n                         <label for=\"descripcion\">Descripción:</label>\r\n-                        <textarea id=\"descripcion\" required></textarea>\r\n+                        <textarea id=\"descripcion\" name=\"descripcion\" required></textarea>\r\n                     </div>\r\n                     <div class=\"form-group\">\r\n                         <label for=\"precio\">Precio:</label>\r\n-                        <input type=\"number\" id=\"precio\" step=\"0.01\" required>\r\n+                        <input type=\"number\" id=\"precio\" name=\"precio\" step=\"0.01\" required>\r\n                     </div>\r\n                     <div class=\"form-group\">\r\n                         <label for=\"id_categoria\">Categoría:</label>\r\n-                        <select id=\"id_categoria\" required>\r\n+                        <select id=\"id_categoria\" name=\"id_categoria\" required>\r\n                             <option value=\"\">Seleccione una categoría</option>\r\n                         </select>\r\n                     </div>\r\n                     <div class=\"form-group\">\r\n                         <label for=\"imagen\">Imagen:</label>\r\n-                        <input type=\"file\" id=\"imagen\" accept=\"image/*\" required>\r\n+                        <input type=\"file\" id=\"imagen\" name=\"imagen\" accept=\"image/*\">\r\n                     </div>\r\n                     <button type=\"submit\">Crear Producto</button>\r\n                 </form>\r\n             `;\r\n \r\n-            modal.classList.remove('hidden');\r\n-            modal.classList.add('show');\r\n-            \r\n             // Cargar categorías en el select\r\n-            categorias.getAll().then(categorias => {\r\n+            categorias.getAll().then(cats => {\r\n                 const select = document.getElementById('id_categoria');\r\n-                categorias.forEach(categoria => {\r\n+                cats.forEach(cat => {\r\n                     const option = document.createElement('option');\r\n-                    option.value = categoria.id_categoria;\r\n-                    option.textContent = categoria.nombre_categoria;\r\n+                    option.value = cat.id_categoria;\r\n+                    option.textContent = cat.nombre_categoria;\r\n                     select.appendChild(option);\r\n                 });\r\n             }).catch(error => {\r\n                 console.error('Error al cargar categorías:', error);\r\n                 alert('Error al cargar las categorías');\r\n             });\r\n+\r\n+            modal.classList.remove('hidden');\r\n             \r\n             document.getElementById('addProductoForm').addEventListener('submit', async (e) => {\r\n                 e.preventDefault();\r\n                 const formData = {\r\n@@ -236,14 +245,12 @@\n                 };\r\n                 \r\n                 try {\r\n                     await productos.create(formData);\r\n-                    modal.classList.remove('show');\r\n                     modal.classList.add('hidden');\r\n                     productos.loadProductos();\r\n                 } catch (error) {\r\n-                    console.error('Error al crear producto:', error);\r\n-                    alert(error.message || 'Error al crear el producto');\r\n+                    alert(error.message);\r\n                 }\r\n             });\r\n         });\r\n     }\r\n"
                },
                {
                    "date": 1743978837174,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,28 +87,35 @@\n \r\n     // Renderizar lista de productos\r\n     renderList(productos) {\r\n         const container = document.getElementById('productosList');\r\n+        if (!container) return;\r\n+\r\n+        if (!productos || productos.length === 0) {\r\n+            container.innerHTML = '<p>No hay productos disponibles.</p>';\r\n+            return;\r\n+        }\r\n+\r\n         container.innerHTML = `\r\n             <table>\r\n                 <thead>\r\n                     <tr>\r\n                         <th>ID</th>\r\n                         <th>Nombre</th>\r\n                         <th>Descripción</th>\r\n                         <th>Precio</th>\r\n-                        <th>Stock</th>\r\n+                        <th>Categoría</th>\r\n                         <th>Acciones</th>\r\n                     </tr>\r\n                 </thead>\r\n                 <tbody>\r\n                     ${productos.map(producto => `\r\n                         <tr>\r\n                             <td>${producto.id_producto}</td>\r\n-                            <td>${producto.nombre}</td>\r\n-                            <td>${producto.descripcion}</td>\r\n-                            <td>${producto.precio}</td>\r\n-                            <td>${producto.stock}</td>\r\n+                            <td>${producto.nombre_producto || 'Sin nombre'}</td>\r\n+                            <td>${producto.descripcion || 'Sin descripción'}</td>\r\n+                            <td>$${producto.precio}</td>\r\n+                            <td>${producto.id_categoria}</td>\r\n                             <td>\r\n                                 <button onclick=\"productos.showEditModal(${producto.id_producto})\">Editar</button>\r\n                                 <button onclick=\"productos.delete(${producto.id_producto})\">Eliminar</button>\r\n                             </td>\r\n@@ -120,54 +127,79 @@\n     },\r\n \r\n     // Mostrar modal de edición\r\n     async showEditModal(id) {\r\n-        const producto = await this.getById(id);\r\n-        const modal = document.getElementById('modal');\r\n-        const modalContent = document.getElementById('modalContent');\r\n-        \r\n-        modalContent.innerHTML = `\r\n-            <h3>Editar Producto</h3>\r\n-            <form id=\"editProductoForm\">\r\n-                <div class=\"form-group\">\r\n-                    <label for=\"nombre\">Nombre:</label>\r\n-                    <input type=\"text\" id=\"nombre\" value=\"${producto.nombre}\" required>\r\n-                </div>\r\n-                <div class=\"form-group\">\r\n-                    <label for=\"descripcion\">Descripción:</label>\r\n-                    <textarea id=\"descripcion\" required>${producto.descripcion}</textarea>\r\n-                </div>\r\n-                <div class=\"form-group\">\r\n-                    <label for=\"precio\">Precio:</label>\r\n-                    <input type=\"number\" id=\"precio\" value=\"${producto.precio}\" required>\r\n-                </div>\r\n-                <div class=\"form-group\">\r\n-                    <label for=\"imagen\">Imagen:</label>\r\n-                    <input type=\"file\" id=\"imagen\">\r\n-                </div>\r\n-                <button type=\"submit\">Guardar</button>\r\n-            </form>\r\n-        `;\r\n+        try {\r\n+            const producto = await this.getById(id);\r\n+            const modal = document.getElementById('modal');\r\n+            const modalContent = document.getElementById('modalContent');\r\n+            \r\n+            modalContent.innerHTML = `\r\n+                <h3>Editar Producto</h3>\r\n+                <form id=\"editProductoForm\">\r\n+                    <div class=\"form-group\">\r\n+                        <label for=\"nombre_producto\">Nombre:</label>\r\n+                        <input type=\"text\" id=\"nombre_producto\" name=\"nombre_producto\" value=\"${producto.nombre_producto}\" required>\r\n+                    </div>\r\n+                    <div class=\"form-group\">\r\n+                        <label for=\"descripcion\">Descripción:</label>\r\n+                        <textarea id=\"descripcion\" name=\"descripcion\" required>${producto.descripcion}</textarea>\r\n+                    </div>\r\n+                    <div class=\"form-group\">\r\n+                        <label for=\"precio\">Precio:</label>\r\n+                        <input type=\"number\" id=\"precio\" name=\"precio\" step=\"0.01\" value=\"${producto.precio}\" required>\r\n+                    </div>\r\n+                    <div class=\"form-group\">\r\n+                        <label for=\"id_categoria\">Categoría:</label>\r\n+                        <select id=\"id_categoria\" name=\"id_categoria\" required>\r\n+                            <option value=\"\">Seleccione una categoría</option>\r\n+                        </select>\r\n+                    </div>\r\n+                    <div class=\"form-group\">\r\n+                        <label for=\"imagen\">Imagen:</label>\r\n+                        <input type=\"file\" id=\"imagen\" name=\"imagen\" accept=\"image/*\">\r\n+                    </div>\r\n+                    <button type=\"submit\">Guardar Cambios</button>\r\n+                </form>\r\n+            `;\r\n \r\n-        modal.classList.remove('hidden');\r\n-        \r\n-        document.getElementById('editProductoForm').addEventListener('submit', async (e) => {\r\n-            e.preventDefault();\r\n-            const formData = {\r\n-                nombre: document.getElementById('nombre').value,\r\n-                descripcion: document.getElementById('descripcion').value,\r\n-                precio: document.getElementById('precio').value,\r\n-                imagen: document.getElementById('imagen').files[0]\r\n-            };\r\n+            // Cargar categorías en el select\r\n+            const categorias = await window.categorias.getAll();\r\n+            const select = document.getElementById('id_categoria');\r\n+            categorias.forEach(cat => {\r\n+                const option = document.createElement('option');\r\n+                option.value = cat.id_categoria;\r\n+                option.textContent = cat.nombre_categoria;\r\n+                if (cat.id_categoria === producto.id_categoria) {\r\n+                    option.selected = true;\r\n+                }\r\n+                select.appendChild(option);\r\n+            });\r\n+\r\n+            modal.classList.remove('hidden');\r\n             \r\n-            try {\r\n-                await this.update(id, formData);\r\n-                modal.classList.add('hidden');\r\n-                this.loadProductos();\r\n-            } catch (error) {\r\n-                alert(error.message);\r\n-            }\r\n-        });\r\n+            document.getElementById('editProductoForm').addEventListener('submit', async (e) => {\r\n+                e.preventDefault();\r\n+                const formData = {\r\n+                    nombre_producto: document.getElementById('nombre_producto').value,\r\n+                    descripcion: document.getElementById('descripcion').value,\r\n+                    precio: document.getElementById('precio').value,\r\n+                    id_categoria: document.getElementById('id_categoria').value,\r\n+                    imagen: document.getElementById('imagen').files[0]\r\n+                };\r\n+                \r\n+                try {\r\n+                    await this.update(id, formData);\r\n+                    modal.classList.add('hidden');\r\n+                    this.loadProductos();\r\n+                } catch (error) {\r\n+                    alert(error.message || 'Error al actualizar el producto');\r\n+                }\r\n+            });\r\n+        } catch (error) {\r\n+            console.error('Error:', error);\r\n+            alert('Error al cargar los datos del producto');\r\n+        }\r\n     },\r\n \r\n     // Cargar productos\r\n     async loadProductos() {\r\n"
                },
                {
                    "date": 1743978850678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,8 +84,26 @@\n             throw error;\r\n         }\r\n     },\r\n \r\n+    // Obtener producto por ID\r\n+    async getById(id) {\r\n+        try {\r\n+            const response = await fetch(`${API_URL}/productos/${id}`, {\r\n+                headers: {\r\n+                    'Authorization': `Bearer ${auth.getToken()}`\r\n+                }\r\n+            });\r\n+\r\n+            if (!response.ok) {\r\n+                throw new Error('Error al obtener el producto');\r\n+            }\r\n+\r\n+            return await response.json();\r\n+        } catch (error) {\r\n+            console.error('Error:', error);\r\n+            throw error;\r\n+        }\r\n     // Renderizar lista de productos\r\n     renderList(productos) {\r\n         const container = document.getElementById('productosList');\r\n         if (!container) return;\r\n"
                },
                {
                    "date": 1743978874922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,8 +102,10 @@\n         } catch (error) {\r\n             console.error('Error:', error);\r\n             throw error;\r\n         }\r\n+    },\r\n+\r\n     // Renderizar lista de productos\r\n     renderList(productos) {\r\n         const container = document.getElementById('productosList');\r\n         if (!container) return;\r\n"
                },
                {
                    "date": 1743979005052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,18 +71,30 @@\n \r\n     // Eliminar producto\r\n     async delete(id) {\r\n         try {\r\n+            if (!confirm('¿Está seguro de que desea eliminar este producto? Esta acción no se puede deshacer.')) {\r\n+                return;\r\n+            }\r\n+\r\n             const response = await fetch(`${API_URL}/productos/${id}`, {\r\n                 method: 'DELETE',\r\n                 headers: {\r\n                     'Authorization': `Bearer ${auth.getToken()}`\r\n                 }\r\n             });\r\n-            return await response.json();\r\n+\r\n+            const data = await response.json();\r\n+            \r\n+            if (!response.ok) {\r\n+                throw new Error(data.message || 'Error al eliminar el producto');\r\n+            }\r\n+\r\n+            alert('Producto eliminado exitosamente');\r\n+            this.loadProductos();\r\n         } catch (error) {\r\n             console.error('Error:', error);\r\n-            throw error;\r\n+            alert(error.message || 'Error al eliminar el producto');\r\n         }\r\n     },\r\n \r\n     // Obtener producto por ID\r\n"
                },
                {
                    "date": 1743979630141,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -160,9 +160,13 @@\n \r\n     // Mostrar modal de edición\r\n     async showEditModal(id) {\r\n         try {\r\n-            const producto = await this.getById(id);\r\n+            const [producto, categorias] = await Promise.all([\r\n+                this.getById(id),\r\n+                this.loadCategorias()\r\n+            ]);\r\n+\r\n             const modal = document.getElementById('modal');\r\n             const modalContent = document.getElementById('modalContent');\r\n             \r\n             modalContent.innerHTML = `\r\n@@ -183,8 +187,13 @@\n                     <div class=\"form-group\">\r\n                         <label for=\"id_categoria\">Categoría:</label>\r\n                         <select id=\"id_categoria\" name=\"id_categoria\" required>\r\n                             <option value=\"\">Seleccione una categoría</option>\r\n+                            ${categorias.map(cat => `\r\n+                                <option value=\"${cat.id_categoria}\" ${cat.id_categoria === producto.id_categoria ? 'selected' : ''}>\r\n+                                    ${cat.nombre_categoria}\r\n+                                </option>\r\n+                            `).join('')}\r\n                         </select>\r\n                     </div>\r\n                     <div class=\"form-group\">\r\n                         <label for=\"imagen\">Imagen:</label>\r\n@@ -193,21 +202,8 @@\n                     <button type=\"submit\">Guardar Cambios</button>\r\n                 </form>\r\n             `;\r\n \r\n-            // Cargar categorías en el select\r\n-            const categorias = await window.categorias.getAll();\r\n-            const select = document.getElementById('id_categoria');\r\n-            categorias.forEach(cat => {\r\n-                const option = document.createElement('option');\r\n-                option.value = cat.id_categoria;\r\n-                option.textContent = cat.nombre_categoria;\r\n-                if (cat.id_categoria === producto.id_categoria) {\r\n-                    option.selected = true;\r\n-                }\r\n-                select.appendChild(option);\r\n-            });\r\n-\r\n             modal.classList.remove('hidden');\r\n             \r\n             document.getElementById('editProductoForm').addEventListener('submit', async (e) => {\r\n                 e.preventDefault();\r\n@@ -232,8 +228,23 @@\n             alert('Error al cargar los datos del producto');\r\n         }\r\n     },\r\n \r\n+    // Cargar categorías\r\n+    async loadCategorias() {\r\n+        try {\r\n+            const response = await fetch(`${API_URL}/categorias`, {\r\n+                headers: {\r\n+                    'Authorization': `Bearer ${auth.getToken()}`\r\n+                }\r\n+            });\r\n+            return await response.json();\r\n+        } catch (error) {\r\n+            console.error('Error al cargar categorías:', error);\r\n+            throw new Error('Error al cargar las categorías');\r\n+        }\r\n+    },\r\n+\r\n     // Cargar productos\r\n     async loadProductos() {\r\n         try {\r\n             const productos = await this.getAll();\r\n"
                },
                {
                    "date": 1743979784821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -203,8 +203,9 @@\n                 </form>\r\n             `;\r\n \r\n             modal.classList.remove('hidden');\r\n+            modal.classList.add('show');\r\n             \r\n             document.getElementById('editProductoForm').addEventListener('submit', async (e) => {\r\n                 e.preventDefault();\r\n                 const formData = {\r\n@@ -216,8 +217,9 @@\n                 };\r\n                 \r\n                 try {\r\n                     await this.update(id, formData);\r\n+                    modal.classList.remove('show');\r\n                     modal.classList.add('hidden');\r\n                     this.loadProductos();\r\n                 } catch (error) {\r\n                     alert(error.message || 'Error al actualizar el producto');\r\n"
                },
                {
                    "date": 1743979825672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -259,12 +259,20 @@\n \r\n // Event Listeners\r\n document.addEventListener('DOMContentLoaded', () => {\r\n     const addProductoBtn = document.getElementById('addProductoBtn');\r\n+    const modal = document.getElementById('modal');\r\n     \r\n+    // Cerrar el modal cuando se hace clic fuera de él\r\n+    modal.addEventListener('click', (e) => {\r\n+        if (e.target === modal) {\r\n+            modal.classList.remove('show');\r\n+            modal.classList.add('hidden');\r\n+        }\r\n+    });\r\n+    \r\n     if (addProductoBtn) {\r\n         addProductoBtn.addEventListener('click', () => {\r\n-            const modal = document.getElementById('modal');\r\n             const modalContent = document.getElementById('modalContent');\r\n             \r\n             modalContent.innerHTML = `\r\n                 <h3>Nuevo Producto</h3>\r\n@@ -294,8 +302,11 @@\n                     <button type=\"submit\">Crear Producto</button>\r\n                 </form>\r\n             `;\r\n \r\n+            modal.classList.remove('hidden');\r\n+            modal.classList.add('show');\r\n+\r\n             // Cargar categorías en el select\r\n             categorias.getAll().then(cats => {\r\n                 const select = document.getElementById('id_categoria');\r\n                 cats.forEach(cat => {\r\n@@ -308,10 +319,8 @@\n                 console.error('Error al cargar categorías:', error);\r\n                 alert('Error al cargar las categorías');\r\n             });\r\n \r\n-            modal.classList.remove('hidden');\r\n-            \r\n             document.getElementById('addProductoForm').addEventListener('submit', async (e) => {\r\n                 e.preventDefault();\r\n                 const formData = {\r\n                     nombre_producto: document.getElementById('nombre_producto').value,\r\n"
                }
            ],
            "date": 1743971135536,
            "name": "Commit-0",
            "content": "// Gestión de productos\r\nconst productos = {\r\n    // Obtener todos los productos\r\n    async getAll() {\r\n        try {\r\n            const response = await fetch(`${API_URL}/productos`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${auth.getToken()}`\r\n                }\r\n            });\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Crear producto\r\n    async create(productoData) {\r\n        try {\r\n            const formData = new FormData();\r\n            for (let key in productoData) {\r\n                formData.append(key, productoData[key]);\r\n            }\r\n\r\n            const response = await fetch(`${API_URL}/productos`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': `Bearer ${auth.getToken()}`\r\n                },\r\n                body: formData\r\n            });\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Actualizar producto\r\n    async update(id, productoData) {\r\n        try {\r\n            const formData = new FormData();\r\n            for (let key in productoData) {\r\n                formData.append(key, productoData[key]);\r\n            }\r\n\r\n            const response = await fetch(`${API_URL}/productos/${id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Authorization': `Bearer ${auth.getToken()}`\r\n                },\r\n                body: formData\r\n            });\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Eliminar producto\r\n    async delete(id) {\r\n        try {\r\n            const response = await fetch(`${API_URL}/productos/${id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Authorization': `Bearer ${auth.getToken()}`\r\n                }\r\n            });\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Renderizar lista de productos\r\n    renderList(productos) {\r\n        const container = document.getElementById('productosList');\r\n        container.innerHTML = `\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Nombre</th>\r\n                        <th>Descripción</th>\r\n                        <th>Precio</th>\r\n                        <th>Stock</th>\r\n                        <th>Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    ${productos.map(producto => `\r\n                        <tr>\r\n                            <td>${producto.id_producto}</td>\r\n                            <td>${producto.nombre}</td>\r\n                            <td>${producto.descripcion}</td>\r\n                            <td>${producto.precio}</td>\r\n                            <td>${producto.stock}</td>\r\n                            <td>\r\n                                <button onclick=\"productos.showEditModal(${producto.id_producto})\">Editar</button>\r\n                                <button onclick=\"productos.delete(${producto.id_producto})\">Eliminar</button>\r\n                            </td>\r\n                        </tr>\r\n                    `).join('')}\r\n                </tbody>\r\n            </table>\r\n        `;\r\n    },\r\n\r\n    // Mostrar modal de edición\r\n    async showEditModal(id) {\r\n        const producto = await this.getById(id);\r\n        const modal = document.getElementById('modal');\r\n        const modalContent = document.getElementById('modalContent');\r\n        \r\n        modalContent.innerHTML = `\r\n            <h3>Editar Producto</h3>\r\n            <form id=\"editProductoForm\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"nombre\">Nombre:</label>\r\n                    <input type=\"text\" id=\"nombre\" value=\"${producto.nombre}\" required>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"descripcion\">Descripción:</label>\r\n                    <textarea id=\"descripcion\" required>${producto.descripcion}</textarea>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"precio\">Precio:</label>\r\n                    <input type=\"number\" id=\"precio\" value=\"${producto.precio}\" required>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"imagen\">Imagen:</label>\r\n                    <input type=\"file\" id=\"imagen\">\r\n                </div>\r\n                <button type=\"submit\">Guardar</button>\r\n            </form>\r\n        `;\r\n\r\n        modal.classList.remove('hidden');\r\n        \r\n        document.getElementById('editProductoForm').addEventListener('submit', async (e) => {\r\n            e.preventDefault();\r\n            const formData = {\r\n                nombre: document.getElementById('nombre').value,\r\n                descripcion: document.getElementById('descripcion').value,\r\n                precio: document.getElementById('precio').value,\r\n                imagen: document.getElementById('imagen').files[0]\r\n            };\r\n            \r\n            try {\r\n                await this.update(id, formData);\r\n                modal.classList.add('hidden');\r\n                this.loadProductos();\r\n            } catch (error) {\r\n                alert(error.message);\r\n            }\r\n        });\r\n    },\r\n\r\n    // Cargar productos\r\n    async loadProductos() {\r\n        try {\r\n            const productos = await this.getAll();\r\n            this.renderList(productos);\r\n        } catch (error) {\r\n            alert('Error al cargar productos');\r\n        }\r\n    }\r\n};\r\n\r\n// Event Listeners\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    const addProductoBtn = document.getElementById('addProductoBtn');\r\n    \r\n    if (addProductoBtn) {\r\n        addProductoBtn.addEventListener('click', () => {\r\n            const modal = document.getElementById('modal');\r\n            const modalContent = document.getElementById('modalContent');\r\n            \r\n            modalContent.innerHTML = `\r\n                <h3>Nuevo Producto</h3>\r\n                <form id=\"addProductoForm\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"nombre\">Nombre:</label>\r\n                        <input type=\"text\" id=\"nombre\" required>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"descripcion\">Descripción:</label>\r\n                        <textarea id=\"descripcion\" required></textarea>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"precio\">Precio:</label>\r\n                        <input type=\"number\" id=\"precio\" required>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"imagen\">Imagen:</label>\r\n                        <input type=\"file\" id=\"imagen\" required>\r\n                    </div>\r\n                    <button type=\"submit\">Crear</button>\r\n                </form>\r\n            `;\r\n\r\n            modal.classList.remove('hidden');\r\n            \r\n            document.getElementById('addProductoForm').addEventListener('submit', async (e) => {\r\n                e.preventDefault();\r\n                const formData = {\r\n                    nombre: document.getElementById('nombre').value,\r\n                    descripcion: document.getElementById('descripcion').value,\r\n                    precio: document.getElementById('precio').value,\r\n                    imagen: document.getElementById('imagen').files[0]\r\n                };\r\n                \r\n                try {\r\n                    await productos.create(formData);\r\n                    modal.classList.add('hidden');\r\n                    productos.loadProductos();\r\n                } catch (error) {\r\n                    alert(error.message);\r\n                }\r\n            });\r\n        });\r\n    }\r\n}); "
        }
    ]
}