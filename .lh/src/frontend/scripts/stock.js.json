{
    "sourceFile": "src/frontend/scripts/stock.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1743971187199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1743971441291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,29 +4,53 @@\n     async getAll() {\r\n         try {\r\n             const response = await fetch(`${API_URL}/stock`, {\r\n                 headers: {\r\n-                    'Authorization': `Bearer ${auth.getToken()}`\r\n+                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                 }\r\n             });\r\n+            if (!response.ok) {\r\n+                throw new Error(`Error HTTP: ${response.status}`);\r\n+            }\r\n             return await response.json();\r\n         } catch (error) {\r\n             console.error('Error:', error);\r\n             throw error;\r\n         }\r\n     },\r\n \r\n+    // Obtener stock por ID\r\n+    async getById(id) {\r\n+        try {\r\n+            const response = await fetch(`${API_URL}/stock/${id}`, {\r\n+                headers: {\r\n+                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n+                }\r\n+            });\r\n+            if (!response.ok) {\r\n+                throw new Error(`Error HTTP: ${response.status}`);\r\n+            }\r\n+            return await response.json();\r\n+        } catch (error) {\r\n+            console.error('Error:', error);\r\n+            throw error;\r\n+        }\r\n+    },\r\n+\r\n     // Actualizar stock\r\n     async update(id, stockData) {\r\n         try {\r\n             const response = await fetch(`${API_URL}/stock/${id}`, {\r\n                 method: 'PUT',\r\n                 headers: {\r\n-                    'Authorization': `Bearer ${auth.getToken()}`,\r\n+                    'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n                     'Content-Type': 'application/json'\r\n                 },\r\n                 body: JSON.stringify(stockData)\r\n             });\r\n+            if (!response.ok) {\r\n+                throw new Error(`Error HTTP: ${response.status}`);\r\n+            }\r\n             return await response.json();\r\n         } catch (error) {\r\n             console.error('Error:', error);\r\n             throw error;\r\n@@ -63,48 +87,52 @@\n     },\r\n \r\n     // Mostrar modal de edici贸n\r\n     async showEditModal(id) {\r\n-        const stockItem = await this.getById(id);\r\n-        const modal = document.getElementById('modal');\r\n-        const modalContent = document.getElementById('modalContent');\r\n-        \r\n-        modalContent.innerHTML = `\r\n-            <h3>Actualizar Stock</h3>\r\n-            <form id=\"editStockForm\">\r\n-                <div class=\"form-group\">\r\n-                    <label for=\"cantidad\">Cantidad:</label>\r\n-                    <input type=\"number\" id=\"cantidad\" value=\"${stockItem.cantidad}\" min=\"0\" required>\r\n-                </div>\r\n-                <button type=\"submit\">Guardar</button>\r\n-            </form>\r\n-        `;\r\n+        try {\r\n+            const stockItem = await this.getById(id);\r\n+            const modal = document.getElementById('modal');\r\n+            const modalContent = document.getElementById('modalContent');\r\n+            \r\n+            modalContent.innerHTML = `\r\n+                <h3>Actualizar Stock</h3>\r\n+                <form id=\"editStockForm\">\r\n+                    <div class=\"form-group\">\r\n+                        <label for=\"cantidad\">Cantidad:</label>\r\n+                        <input type=\"number\" id=\"cantidad\" value=\"${stockItem.cantidad}\" min=\"0\" required>\r\n+                    </div>\r\n+                    <button type=\"submit\">Guardar</button>\r\n+                </form>\r\n+            `;\r\n \r\n-        modal.classList.remove('hidden');\r\n-        \r\n-        document.getElementById('editStockForm').addEventListener('submit', async (e) => {\r\n-            e.preventDefault();\r\n-            const formData = {\r\n-                cantidad: document.getElementById('cantidad').value\r\n-            };\r\n+            modal.classList.remove('hidden');\r\n             \r\n-            try {\r\n-                await this.update(id, formData);\r\n-                modal.classList.add('hidden');\r\n-                this.loadStock();\r\n-            } catch (error) {\r\n-                alert(error.message);\r\n-            }\r\n-        });\r\n+            document.getElementById('editStockForm').addEventListener('submit', async (e) => {\r\n+                e.preventDefault();\r\n+                const formData = {\r\n+                    cantidad: document.getElementById('cantidad').value\r\n+                };\r\n+                \r\n+                try {\r\n+                    await this.update(id, formData);\r\n+                    modal.classList.add('hidden');\r\n+                    this.loadStock();\r\n+                } catch (error) {\r\n+                    alert(error.message);\r\n+                }\r\n+            });\r\n+        } catch (error) {\r\n+            alert('Error al cargar los datos del stock: ' + error.message);\r\n+        }\r\n     },\r\n \r\n     // Cargar stock\r\n     async loadStock() {\r\n         try {\r\n             const stockItems = await this.getAll();\r\n             this.renderList(stockItems);\r\n         } catch (error) {\r\n-            alert('Error al cargar stock');\r\n+            alert('Error al cargar stock: ' + error.message);\r\n         }\r\n     }\r\n };\r\n \r\n"
                },
                {
                    "date": 1743971956667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,16 +2,24 @@\n const stock = {\r\n     // Obtener todo el stock\r\n     async getAll() {\r\n         try {\r\n+            const token = localStorage.getItem('token');\r\n+            if (!token) {\r\n+                throw new Error('No hay token de autenticaci贸n');\r\n+            }\r\n+\r\n             const response = await fetch(`${API_URL}/stock`, {\r\n                 headers: {\r\n-                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n+                    'Authorization': `Bearer ${token}`\r\n                 }\r\n             });\r\n+\r\n             if (!response.ok) {\r\n-                throw new Error(`Error HTTP: ${response.status}`);\r\n+                const errorData = await response.json();\r\n+                throw new Error(errorData.message || `Error HTTP: ${response.status}`);\r\n             }\r\n+\r\n             return await response.json();\r\n         } catch (error) {\r\n             console.error('Error:', error);\r\n             throw error;\r\n@@ -20,16 +28,24 @@\n \r\n     // Obtener stock por ID\r\n     async getById(id) {\r\n         try {\r\n+            const token = localStorage.getItem('token');\r\n+            if (!token) {\r\n+                throw new Error('No hay token de autenticaci贸n');\r\n+            }\r\n+\r\n             const response = await fetch(`${API_URL}/stock/${id}`, {\r\n                 headers: {\r\n-                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n+                    'Authorization': `Bearer ${token}`\r\n                 }\r\n             });\r\n+\r\n             if (!response.ok) {\r\n-                throw new Error(`Error HTTP: ${response.status}`);\r\n+                const errorData = await response.json();\r\n+                throw new Error(errorData.message || `Error HTTP: ${response.status}`);\r\n             }\r\n+\r\n             return await response.json();\r\n         } catch (error) {\r\n             console.error('Error:', error);\r\n             throw error;\r\n@@ -38,19 +54,27 @@\n \r\n     // Actualizar stock\r\n     async update(id, stockData) {\r\n         try {\r\n+            const token = localStorage.getItem('token');\r\n+            if (!token) {\r\n+                throw new Error('No hay token de autenticaci贸n');\r\n+            }\r\n+\r\n             const response = await fetch(`${API_URL}/stock/${id}`, {\r\n                 method: 'PUT',\r\n                 headers: {\r\n-                    'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n+                    'Authorization': `Bearer ${token}`,\r\n                     'Content-Type': 'application/json'\r\n                 },\r\n                 body: JSON.stringify(stockData)\r\n             });\r\n+\r\n             if (!response.ok) {\r\n-                throw new Error(`Error HTTP: ${response.status}`);\r\n+                const errorData = await response.json();\r\n+                throw new Error(errorData.message || `Error HTTP: ${response.status}`);\r\n             }\r\n+\r\n             return await response.json();\r\n         } catch (error) {\r\n             console.error('Error:', error);\r\n             throw error;\r\n@@ -59,8 +83,15 @@\n \r\n     // Renderizar lista de stock\r\n     renderList(stockItems) {\r\n         const container = document.getElementById('stockList');\r\n+        if (!container) return;\r\n+\r\n+        if (!stockItems || stockItems.length === 0) {\r\n+            container.innerHTML = '<p>No hay registros de stock disponibles.</p>';\r\n+            return;\r\n+        }\r\n+\r\n         container.innerHTML = `\r\n             <table>\r\n                 <thead>\r\n                     <tr>\r\n@@ -103,9 +134,9 @@\n                     <button type=\"submit\">Guardar</button>\r\n                 </form>\r\n             `;\r\n \r\n-            modal.classList.remove('hidden');\r\n+            modal.classList.add('show');\r\n             \r\n             document.getElementById('editStockForm').addEventListener('submit', async (e) => {\r\n                 e.preventDefault();\r\n                 const formData = {\r\n@@ -113,9 +144,9 @@\n                 };\r\n                 \r\n                 try {\r\n                     await this.update(id, formData);\r\n-                    modal.classList.add('hidden');\r\n+                    modal.classList.remove('show');\r\n                     this.loadStock();\r\n                 } catch (error) {\r\n                     alert(error.message);\r\n                 }\r\n@@ -130,9 +161,12 @@\n         try {\r\n             const stockItems = await this.getAll();\r\n             this.renderList(stockItems);\r\n         } catch (error) {\r\n-            alert('Error al cargar stock: ' + error.message);\r\n+            const container = document.getElementById('stockList');\r\n+            if (container) {\r\n+                container.innerHTML = `<p class=\"error\">Error al cargar stock: ${error.message}</p>`;\r\n+            }\r\n         }\r\n     }\r\n };\r\n \r\n"
                }
            ],
            "date": 1743971187199,
            "name": "Commit-0",
            "content": "// Gesti贸n de stock\r\nconst stock = {\r\n    // Obtener todo el stock\r\n    async getAll() {\r\n        try {\r\n            const response = await fetch(`${API_URL}/stock`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${auth.getToken()}`\r\n                }\r\n            });\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Actualizar stock\r\n    async update(id, stockData) {\r\n        try {\r\n            const response = await fetch(`${API_URL}/stock/${id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Authorization': `Bearer ${auth.getToken()}`,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(stockData)\r\n            });\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Renderizar lista de stock\r\n    renderList(stockItems) {\r\n        const container = document.getElementById('stockList');\r\n        container.innerHTML = `\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Producto</th>\r\n                        <th>Cantidad</th>\r\n                        <th>Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    ${stockItems.map(item => `\r\n                        <tr>\r\n                            <td>${item.id_stock}</td>\r\n                            <td>${item.nombre_producto}</td>\r\n                            <td>${item.cantidad}</td>\r\n                            <td>\r\n                                <button onclick=\"stock.showEditModal(${item.id_stock})\">Actualizar Stock</button>\r\n                            </td>\r\n                        </tr>\r\n                    `).join('')}\r\n                </tbody>\r\n            </table>\r\n        `;\r\n    },\r\n\r\n    // Mostrar modal de edici贸n\r\n    async showEditModal(id) {\r\n        const stockItem = await this.getById(id);\r\n        const modal = document.getElementById('modal');\r\n        const modalContent = document.getElementById('modalContent');\r\n        \r\n        modalContent.innerHTML = `\r\n            <h3>Actualizar Stock</h3>\r\n            <form id=\"editStockForm\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"cantidad\">Cantidad:</label>\r\n                    <input type=\"number\" id=\"cantidad\" value=\"${stockItem.cantidad}\" min=\"0\" required>\r\n                </div>\r\n                <button type=\"submit\">Guardar</button>\r\n            </form>\r\n        `;\r\n\r\n        modal.classList.remove('hidden');\r\n        \r\n        document.getElementById('editStockForm').addEventListener('submit', async (e) => {\r\n            e.preventDefault();\r\n            const formData = {\r\n                cantidad: document.getElementById('cantidad').value\r\n            };\r\n            \r\n            try {\r\n                await this.update(id, formData);\r\n                modal.classList.add('hidden');\r\n                this.loadStock();\r\n            } catch (error) {\r\n                alert(error.message);\r\n            }\r\n        });\r\n    },\r\n\r\n    // Cargar stock\r\n    async loadStock() {\r\n        try {\r\n            const stockItems = await this.getAll();\r\n            this.renderList(stockItems);\r\n        } catch (error) {\r\n            alert('Error al cargar stock');\r\n        }\r\n    }\r\n};\r\n\r\n// Event Listeners\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    if (document.getElementById('stockList')) {\r\n        stock.loadStock();\r\n    }\r\n}); "
        }
    ]
}