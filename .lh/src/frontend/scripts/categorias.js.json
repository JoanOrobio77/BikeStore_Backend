{
    "sourceFile": "src/frontend/scripts/categorias.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1743971154824,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1743974298085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,10 +20,10 @@\n         try {\r\n             const response = await fetch(`${API_URL}/categorias`, {\r\n                 method: 'POST',\r\n                 headers: {\r\n-                    'Authorization': `Bearer ${auth.getToken()}`,\r\n-                    'Content-Type': 'application/json'\r\n+                    'Content-Type': 'application/json',\r\n+                    'Authorization': `Bearer ${auth.getToken()}`\r\n                 },\r\n                 body: JSON.stringify(categoriaData)\r\n             });\r\n             return await response.json();\r\n@@ -38,10 +38,10 @@\n         try {\r\n             const response = await fetch(`${API_URL}/categorias/${id}`, {\r\n                 method: 'PUT',\r\n                 headers: {\r\n-                    'Authorization': `Bearer ${auth.getToken()}`,\r\n-                    'Content-Type': 'application/json'\r\n+                    'Content-Type': 'application/json',\r\n+                    'Authorization': `Bearer ${auth.getToken()}`\r\n                 },\r\n                 body: JSON.stringify(categoriaData)\r\n             });\r\n             return await response.json();\r\n@@ -66,11 +66,33 @@\n             throw error;\r\n         }\r\n     },\r\n \r\n+    // Obtener categoría por ID\r\n+    async getById(id) {\r\n+        try {\r\n+            const response = await fetch(`${API_URL}/categorias/${id}`, {\r\n+                headers: {\r\n+                    'Authorization': `Bearer ${auth.getToken()}`\r\n+                }\r\n+            });\r\n+            return await response.json();\r\n+        } catch (error) {\r\n+            console.error('Error:', error);\r\n+            throw error;\r\n+        }\r\n+    },\r\n+\r\n     // Renderizar lista de categorías\r\n     renderList(categorias) {\r\n         const container = document.getElementById('categoriasList');\r\n+        if (!container) return;\r\n+\r\n+        if (!categorias || categorias.length === 0) {\r\n+            container.innerHTML = '<p>No hay categorías disponibles.</p>';\r\n+            return;\r\n+        }\r\n+\r\n         container.innerHTML = `\r\n             <table>\r\n                 <thead>\r\n                     <tr>\r\n@@ -96,48 +118,57 @@\n     },\r\n \r\n     // Mostrar modal de edición\r\n     async showEditModal(id) {\r\n-        const categoria = await this.getById(id);\r\n-        const modal = document.getElementById('modal');\r\n-        const modalContent = document.getElementById('modalContent');\r\n-        \r\n-        modalContent.innerHTML = `\r\n-            <h3>Editar Categoría</h3>\r\n-            <form id=\"editCategoriaForm\">\r\n-                <div class=\"form-group\">\r\n-                    <label for=\"nombre\">Nombre:</label>\r\n-                    <input type=\"text\" id=\"nombre\" value=\"${categoria.nombre_categoria}\" required>\r\n-                </div>\r\n-                <button type=\"submit\">Guardar</button>\r\n-            </form>\r\n-        `;\r\n+        try {\r\n+            const categoria = await this.getById(id);\r\n+            const modal = document.getElementById('modal');\r\n+            const modalContent = document.getElementById('modalContent');\r\n+            \r\n+            modalContent.innerHTML = `\r\n+                <h3>Editar Categoría</h3>\r\n+                <form id=\"editCategoriaForm\">\r\n+                    <div class=\"form-group\">\r\n+                        <label for=\"nombre_categoria\">Nombre:</label>\r\n+                        <input type=\"text\" id=\"nombre_categoria\" value=\"${categoria.nombre_categoria}\" required>\r\n+                    </div>\r\n+                    <button type=\"submit\">Guardar</button>\r\n+                </form>\r\n+            `;\r\n \r\n-        modal.classList.remove('hidden');\r\n-        \r\n-        document.getElementById('editCategoriaForm').addEventListener('submit', async (e) => {\r\n-            e.preventDefault();\r\n-            const formData = {\r\n-                nombre_categoria: document.getElementById('nombre').value\r\n-            };\r\n+            modal.classList.remove('hidden');\r\n+            modal.classList.add('show');\r\n             \r\n-            try {\r\n-                await this.update(id, formData);\r\n-                modal.classList.add('hidden');\r\n-                this.loadCategorias();\r\n-            } catch (error) {\r\n-                alert(error.message);\r\n-            }\r\n-        });\r\n+            document.getElementById('editCategoriaForm').addEventListener('submit', async (e) => {\r\n+                e.preventDefault();\r\n+                const formData = {\r\n+                    nombre_categoria: document.getElementById('nombre_categoria').value\r\n+                };\r\n+                \r\n+                try {\r\n+                    await this.update(id, formData);\r\n+                    modal.classList.remove('show');\r\n+                    modal.classList.add('hidden');\r\n+                    this.loadCategorias();\r\n+                } catch (error) {\r\n+                    console.error('Error al actualizar categoría:', error);\r\n+                    alert(error.message || 'Error al actualizar la categoría');\r\n+                }\r\n+            });\r\n+        } catch (error) {\r\n+            console.error('Error al cargar categoría:', error);\r\n+            alert('Error al cargar los datos de la categoría');\r\n+        }\r\n     },\r\n \r\n     // Cargar categorías\r\n     async loadCategorias() {\r\n         try {\r\n             const categorias = await this.getAll();\r\n             this.renderList(categorias);\r\n         } catch (error) {\r\n-            alert('Error al cargar categorías');\r\n+            console.error('Error al cargar categorías:', error);\r\n+            alert('Error al cargar las categorías');\r\n         }\r\n     }\r\n };\r\n \r\n@@ -153,29 +184,32 @@\n             modalContent.innerHTML = `\r\n                 <h3>Nueva Categoría</h3>\r\n                 <form id=\"addCategoriaForm\">\r\n                     <div class=\"form-group\">\r\n-                        <label for=\"nombre\">Nombre:</label>\r\n-                        <input type=\"text\" id=\"nombre\" required>\r\n+                        <label for=\"nombre_categoria\">Nombre:</label>\r\n+                        <input type=\"text\" id=\"nombre_categoria\" required>\r\n                     </div>\r\n-                    <button type=\"submit\">Crear</button>\r\n+                    <button type=\"submit\">Crear Categoría</button>\r\n                 </form>\r\n             `;\r\n \r\n             modal.classList.remove('hidden');\r\n+            modal.classList.add('show');\r\n             \r\n             document.getElementById('addCategoriaForm').addEventListener('submit', async (e) => {\r\n                 e.preventDefault();\r\n                 const formData = {\r\n-                    nombre_categoria: document.getElementById('nombre').value\r\n+                    nombre_categoria: document.getElementById('nombre_categoria').value\r\n                 };\r\n                 \r\n                 try {\r\n                     await categorias.create(formData);\r\n+                    modal.classList.remove('show');\r\n                     modal.classList.add('hidden');\r\n                     categorias.loadCategorias();\r\n                 } catch (error) {\r\n-                    alert(error.message);\r\n+                    console.error('Error al crear categoría:', error);\r\n+                    alert(error.message || 'Error al crear la categoría');\r\n                 }\r\n             });\r\n         });\r\n     }\r\n"
                },
                {
                    "date": 1743978804559,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,18 +53,30 @@\n \r\n     // Eliminar categoría\r\n     async delete(id) {\r\n         try {\r\n+            if (!confirm('¿Está seguro de que desea eliminar esta categoría? Esta acción no se puede deshacer.')) {\r\n+                return;\r\n+            }\r\n+\r\n             const response = await fetch(`${API_URL}/categorias/${id}`, {\r\n                 method: 'DELETE',\r\n                 headers: {\r\n                     'Authorization': `Bearer ${auth.getToken()}`\r\n                 }\r\n             });\r\n-            return await response.json();\r\n+\r\n+            const data = await response.json();\r\n+            \r\n+            if (!response.ok) {\r\n+                throw new Error(data.message || 'Error al eliminar la categoría');\r\n+            }\r\n+\r\n+            alert('Categoría eliminada exitosamente');\r\n+            this.loadCategorias();\r\n         } catch (error) {\r\n             console.error('Error:', error);\r\n-            throw error;\r\n+            alert(error.message || 'Error al eliminar la categoría. Asegúrese de que no haya productos asociados.');\r\n         }\r\n     },\r\n \r\n     // Obtener categoría por ID\r\n"
                }
            ],
            "date": 1743971154824,
            "name": "Commit-0",
            "content": "// Gestión de categorías\r\nconst categorias = {\r\n    // Obtener todas las categorías\r\n    async getAll() {\r\n        try {\r\n            const response = await fetch(`${API_URL}/categorias`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${auth.getToken()}`\r\n                }\r\n            });\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Crear categoría\r\n    async create(categoriaData) {\r\n        try {\r\n            const response = await fetch(`${API_URL}/categorias`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': `Bearer ${auth.getToken()}`,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(categoriaData)\r\n            });\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Actualizar categoría\r\n    async update(id, categoriaData) {\r\n        try {\r\n            const response = await fetch(`${API_URL}/categorias/${id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Authorization': `Bearer ${auth.getToken()}`,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(categoriaData)\r\n            });\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Eliminar categoría\r\n    async delete(id) {\r\n        try {\r\n            const response = await fetch(`${API_URL}/categorias/${id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Authorization': `Bearer ${auth.getToken()}`\r\n                }\r\n            });\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Renderizar lista de categorías\r\n    renderList(categorias) {\r\n        const container = document.getElementById('categoriasList');\r\n        container.innerHTML = `\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Nombre</th>\r\n                        <th>Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    ${categorias.map(categoria => `\r\n                        <tr>\r\n                            <td>${categoria.id_categoria}</td>\r\n                            <td>${categoria.nombre_categoria}</td>\r\n                            <td>\r\n                                <button onclick=\"categorias.showEditModal(${categoria.id_categoria})\">Editar</button>\r\n                                <button onclick=\"categorias.delete(${categoria.id_categoria})\">Eliminar</button>\r\n                            </td>\r\n                        </tr>\r\n                    `).join('')}\r\n                </tbody>\r\n            </table>\r\n        `;\r\n    },\r\n\r\n    // Mostrar modal de edición\r\n    async showEditModal(id) {\r\n        const categoria = await this.getById(id);\r\n        const modal = document.getElementById('modal');\r\n        const modalContent = document.getElementById('modalContent');\r\n        \r\n        modalContent.innerHTML = `\r\n            <h3>Editar Categoría</h3>\r\n            <form id=\"editCategoriaForm\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"nombre\">Nombre:</label>\r\n                    <input type=\"text\" id=\"nombre\" value=\"${categoria.nombre_categoria}\" required>\r\n                </div>\r\n                <button type=\"submit\">Guardar</button>\r\n            </form>\r\n        `;\r\n\r\n        modal.classList.remove('hidden');\r\n        \r\n        document.getElementById('editCategoriaForm').addEventListener('submit', async (e) => {\r\n            e.preventDefault();\r\n            const formData = {\r\n                nombre_categoria: document.getElementById('nombre').value\r\n            };\r\n            \r\n            try {\r\n                await this.update(id, formData);\r\n                modal.classList.add('hidden');\r\n                this.loadCategorias();\r\n            } catch (error) {\r\n                alert(error.message);\r\n            }\r\n        });\r\n    },\r\n\r\n    // Cargar categorías\r\n    async loadCategorias() {\r\n        try {\r\n            const categorias = await this.getAll();\r\n            this.renderList(categorias);\r\n        } catch (error) {\r\n            alert('Error al cargar categorías');\r\n        }\r\n    }\r\n};\r\n\r\n// Event Listeners\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    const addCategoriaBtn = document.getElementById('addCategoriaBtn');\r\n    \r\n    if (addCategoriaBtn) {\r\n        addCategoriaBtn.addEventListener('click', () => {\r\n            const modal = document.getElementById('modal');\r\n            const modalContent = document.getElementById('modalContent');\r\n            \r\n            modalContent.innerHTML = `\r\n                <h3>Nueva Categoría</h3>\r\n                <form id=\"addCategoriaForm\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"nombre\">Nombre:</label>\r\n                        <input type=\"text\" id=\"nombre\" required>\r\n                    </div>\r\n                    <button type=\"submit\">Crear</button>\r\n                </form>\r\n            `;\r\n\r\n            modal.classList.remove('hidden');\r\n            \r\n            document.getElementById('addCategoriaForm').addEventListener('submit', async (e) => {\r\n                e.preventDefault();\r\n                const formData = {\r\n                    nombre_categoria: document.getElementById('nombre').value\r\n                };\r\n                \r\n                try {\r\n                    await categorias.create(formData);\r\n                    modal.classList.add('hidden');\r\n                    categorias.loadCategorias();\r\n                } catch (error) {\r\n                    alert(error.message);\r\n                }\r\n            });\r\n        });\r\n    }\r\n}); "
        }
    ]
}